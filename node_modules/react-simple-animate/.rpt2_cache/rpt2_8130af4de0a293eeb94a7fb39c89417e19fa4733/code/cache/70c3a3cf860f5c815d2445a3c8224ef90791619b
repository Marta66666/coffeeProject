{"code":"import { useEffect, useState } from 'react';\r\nimport createRandomName from './utils/createRandomName';\r\nimport calculateTotalDuration from './utils/calculateTotalDuration';\r\nimport createTag from './logic/createTag';\r\nimport deleteRules from './logic/deleteRules';\r\nexport default function useAnimateGroup(props) {\r\n    let nextDelay = 0;\r\n    const localAnimationNames = {};\r\n    const { sequences } = props;\r\n    const [isPlaying, setPlay] = useState(false);\r\n    useEffect(() => {\r\n        let localStyleTag;\r\n        sequences.forEach(({ keyframes = false }, i) => {\r\n            if (keyframes) {\r\n                const animationName = createRandomName();\r\n                localAnimationNames[i] = animationName;\r\n                // @ts-ignore\r\n                const { styleTag } = createTag({ animationName, keyframes });\r\n                localStyleTag = styleTag;\r\n            }\r\n        });\r\n        return () => {\r\n            if (localStyleTag) {\r\n                Object.values(localAnimationNames).forEach(name => {\r\n                    // @ts-ignore\r\n                    deleteRules(localStyleTag.sheet, name);\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n    const styles = sequences.map((prop, i) => {\r\n        if (!isPlaying)\r\n            return null;\r\n        const { duration = 0.3, keyframes = false, easeType = 'linear', delay = 0, iterationCount = 1, direction = 'normal', fillMode = 'none', playState: stylePlayState = 'running', end, overlay, } = prop;\r\n        nextDelay = calculateTotalDuration({\r\n            duration,\r\n            delay,\r\n            overlay,\r\n        });\r\n        if (keyframes) {\r\n            return {\r\n                style: `${duration}s ${easeType} ${i === 0 ? delay : nextDelay + delay}s ${iterationCount} ${direction} ${fillMode} ${stylePlayState} ${localAnimationNames[i]}`,\r\n            };\r\n        }\r\n        return Object.assign({}, end, { transition: `all ${duration}s ${easeType} ${delay}s` });\r\n    });\r\n    const play = (playValue) => {\r\n        setPlay(playValue);\r\n    };\r\n    return [styles, play, isPlaying];\r\n}\r\n//# sourceMappingURL=useAnimateGroup.js.map","map":"{\"version\":3,\"file\":\"useAnimateGroup.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/useAnimateGroup.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC5C,OAAO,gBAAgB,MAAM,0BAA0B,CAAC;AACxD,OAAO,sBAAsB,MAAM,gCAAgC,CAAC;AACpE,OAAO,SAAS,MAAM,mBAAmB,CAAC;AAC1C,OAAO,WAAW,MAAM,qBAAqB,CAAC;AAkB9C,MAAM,CAAC,OAAO,UAAU,eAAe,CAAC,KAA6B;IACnE,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,MAAM,mBAAmB,GAAG,EAAE,CAAC;IAC/B,MAAM,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;IAC5B,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAE7C,SAAS,CAAC,GAAQ,EAAE;QAClB,IAAI,aAAa,CAAC;QAElB,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,SAAS,EAAE;gBACb,MAAM,aAAa,GAAG,gBAAgB,EAAE,CAAC;gBACzC,mBAAmB,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;gBACvC,aAAa;gBACb,MAAM,EAAE,QAAQ,EAAE,GAAG,SAAS,CAAC,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC,CAAC;gBAC7D,aAAa,GAAG,QAAQ,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,GAAS,EAAE;YAChB,IAAI,aAAa,EAAE;gBACjB,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBAChD,aAAa;oBACb,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAC1B,CACE,IAAI,EACJ,CAAC,EACD,EAAE;QACF,IAAI,CAAC,SAAS;YAAE,OAAO,IAAI,CAAC;QAE5B,MAAM,EACJ,QAAQ,GAAG,GAAG,EACd,SAAS,GAAG,KAAK,EACjB,QAAQ,GAAG,QAAQ,EACnB,KAAK,GAAG,CAAC,EACT,cAAc,GAAG,CAAC,EAClB,SAAS,GAAG,QAAQ,EACpB,QAAQ,GAAG,MAAM,EACjB,SAAS,EAAE,cAAc,GAAG,SAAS,EACrC,GAAG,EACH,OAAO,GACR,GAAG,IAAI,CAAC;QAET,SAAS,GAAG,sBAAsB,CAAC;YACjC,QAAQ;YACR,KAAK;YACL,OAAO;SACR,CAAC,CAAC;QAEH,IAAI,SAAS,EAAE;YACb,OAAO;gBACL,KAAK,EAAE,GAAG,QAAQ,KAAK,QAAQ,IAC7B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,GAAG,KAChC,KAAK,cAAc,IAAI,SAAS,IAAI,QAAQ,IAAI,cAAc,IAAI,mBAAmB,CAAC,CAAC,CAAC,EAAE;aAC3F,CAAC;SACH;QAED,yBACK,GAAG,IACN,UAAU,EAAE,OAAO,QAAQ,KAAK,QAAQ,IAAI,KAAK,GAAG,IACpD;IACJ,CAAC,CACF,CAAC;IAEF,MAAM,IAAI,GAAG,CAAC,SAAkB,EAAE,EAAE;QAClC,OAAO,CAAC,SAAS,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AACnC,CAAC\"}","dts":{"name":"/Users/bill/git/react-simple-animate/useAnimateGroup.d.ts","writeByteOrderMark":false,"text":"import { AnimationStateType, Style } from './types';\r\nimport { Keyframes } from './types';\r\ninterface Props {\r\n    easeType: string;\r\n    delay: number;\r\n    end: Style;\r\n    duration: number;\r\n    overlay: number;\r\n    keyframes: Keyframes;\r\n    playState?: string;\r\n    direction?: 'normal' | 'reverse' | 'alternate' | 'alternate-reverse';\r\n    fillMode?: 'none' | 'forwards' | 'backwards' | 'both';\r\n    iterationCount?: string | number;\r\n    animationStates: AnimationStateType;\r\n}\r\nexport default function useAnimateGroup(props: {\r\n    sequences: Props[];\r\n}): (boolean | ({\r\n    style: string;\r\n} | {\r\n    transition: string;\r\n    style?: undefined;\r\n} | null)[] | ((playValue: boolean) => void))[];\r\nexport {};\r\n"}}
