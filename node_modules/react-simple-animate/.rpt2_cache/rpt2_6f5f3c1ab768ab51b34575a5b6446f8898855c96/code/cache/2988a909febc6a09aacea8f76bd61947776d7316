{"code":"import { useEffect, useState, useRef } from 'react';\r\nimport createRandomName from './utils/createRandomName';\r\nimport calculateTotalDuration from './utils/calculateTotalDuration';\r\nimport createTag from './logic/createTag';\r\nimport deleteRules from './logic/deleteRules';\r\nfunction createArrayWithNumbers(length) {\r\n    return Array.from({ length }, () => null);\r\n}\r\nexport default function useAnimateGroup(props) {\r\n    const { sequences = [] } = props;\r\n    const defaultArray = createArrayWithNumbers(sequences.length);\r\n    const [styles, setStyles] = useState(defaultArray);\r\n    const [isPlaying, setPlaying] = useState(false);\r\n    const animationNamesRef = useRef({});\r\n    useEffect(() => {\r\n        let localStyleTag;\r\n        // @ts-ignore\r\n        sequences.forEach(({ keyframes = false }, i) => {\r\n            if (!Array.isArray(keyframes))\r\n                return;\r\n            const animationName = createRandomName();\r\n            animationNamesRef.current[i] = animationName;\r\n            const { styleTag } = createTag({ animationName, keyframes });\r\n            localStyleTag = styleTag;\r\n        });\r\n        return () => {\r\n            if (!localStyleTag)\r\n                return;\r\n            Object.values(animationNamesRef).forEach(name => {\r\n                deleteRules(localStyleTag.sheet, name);\r\n            });\r\n        };\r\n    }, []);\r\n    const play = (isPlay) => {\r\n        let totalDuration = 0;\r\n        const styles = (isPlay ? sequences : [...sequences].reverse()).map((current, currentIndex) => {\r\n            const { duration = 0.3, delay = 0, overlay, keyframes, iterationCount = 1, easeType = 'linear', playState = 'running', direction = 'normal', fillMode = 'none', end = {}, start = {}, } = current;\r\n            const delayDuration = currentIndex === 0 ? delay : totalDuration;\r\n            totalDuration = calculateTotalDuration({ duration, delay, overlay }) + totalDuration;\r\n            if (keyframes) {\r\n                return isPlay\r\n                    ? {\r\n                        animation: `${duration}s ${easeType} ${delayDuration}s ${iterationCount} ${direction} ${fillMode} ${playState} ${animationNamesRef.current[currentIndex]}`,\r\n                    }\r\n                    : {};\r\n            }\r\n            const transition = `all ${duration}s ${easeType} ${delayDuration}s`;\r\n            return Object.assign({}, (isPlay ? end : start), { transition });\r\n        });\r\n        // @ts-ignore\r\n        setStyles(isPlay ? styles : [...styles].reverse());\r\n        setPlaying(!isPlaying);\r\n    };\r\n    return { styles, play, isPlaying };\r\n}\r\n//# sourceMappingURL=useAnimateGroup.js.map","map":"{\"version\":3,\"file\":\"useAnimateGroup.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/useAnimateGroup.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/bill/git/react-simple-animate/useAnimateGroup.d.ts","writeByteOrderMark":false,"text":"import { HookSequences } from './types';\r\ninterface Props {\r\n    sequences: HookSequences;\r\n}\r\nexport default function useAnimateGroup(props: Props): {\r\n    styles: null[];\r\n    play: (isPlay: boolean) => void;\r\n    isPlaying: boolean;\r\n};\r\nexport {};\r\n"}}
