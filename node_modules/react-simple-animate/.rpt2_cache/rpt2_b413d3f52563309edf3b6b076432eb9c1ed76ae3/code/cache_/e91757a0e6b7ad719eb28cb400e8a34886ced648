{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport calculateTotalDuration from './utils/calculateTotalDuration';\r\nconst { useState, useRef, useEffect } = React;\r\nexport const AnimateContext = React.createContext({\r\n    animationStates: {},\r\n    register: (data) => { },\r\n});\r\nexport default function AnimateGroup(props) {\r\n    const { play, sequences = [], children } = props;\r\n    const [animationStates, setAnimationStates] = useState();\r\n    const animationsRef = useRef({});\r\n    const register = (data) => {\r\n        const { sequenceIndex, sequenceId } = data;\r\n        const id = sequenceId || sequenceIndex;\r\n        if (id === undefined || (sequenceIndex && sequenceIndex < 0) || (sequenceId && sequenceId === ''))\r\n            return;\r\n        animationsRef.current[id] = data;\r\n    };\r\n    useEffect(() => {\r\n        const sequencesToAnimate = Array.isArray(sequences) && sequences.length ? sequences : Object.values(animationsRef.current);\r\n        const localAnimationState = {};\r\n        sequencesToAnimate.reduce((previous, current, currentIndex) => {\r\n            const { sequenceId, sequenceIndex } = current, restAttributes = tslib_1.__rest(current, [\"sequenceId\", \"sequenceIndex\"]);\r\n            const { duration, delay, overlay } = restAttributes;\r\n            let id = sequenceId || sequenceIndex;\r\n            id = sequenceId === undefined && sequenceIndex === undefined ? currentIndex : id || 0;\r\n            const totalDuration = calculateTotalDuration({ duration, delay, overlay }) + previous;\r\n            localAnimationState[id] = {\r\n                play,\r\n                delay: currentIndex === 0 ? delay || 0 : totalDuration,\r\n            };\r\n            return totalDuration;\r\n        }, 0);\r\n        setAnimationStates(localAnimationState);\r\n    }, [play]);\r\n    // @ts-ignore\r\n    return (React.createElement(AnimateContext.Provider, { value: { animationStates, register } }, children));\r\n}\r\n//# sourceMappingURL=animateGroup.js.map","map":"{\"version\":3,\"file\":\"animateGroup.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/animateGroup.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,sBAAsB,MAAM,gCAAgC,CAAC;AAEpE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;AAQ9C,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,CAAC,aAAa,CAAC;IAChD,eAAe,EAAE,EAAE;IACnB,QAAQ,EAAE,CAAC,IAA4C,EAAQ,EAAE,GAAE,CAAC;CACrE,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,UAAU,YAAY,CAAC,KAAY;IAC/C,MAAM,EAAE,IAAI,EAAE,SAAS,GAAG,EAAE,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;IACjD,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,QAAQ,EAAE,CAAC;IACzD,MAAM,aAAa,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;IAEjC,MAAM,QAAQ,GAAG,CAAC,IAA4C,EAAE,EAAE;QAChE,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QAC3C,MAAM,EAAE,GAAG,UAAU,IAAI,aAAa,CAAC;QACvC,IAAI,EAAE,KAAK,SAAS,IAAI,CAAC,aAAa,IAAI,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,UAAU,KAAK,EAAE,CAAC;YAAE,OAAO;QAE1G,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;IACnC,CAAC,CAAC;IAEF,SAAS,CACP,GAAS,EAAE;QACT,MAAM,kBAAkB,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC3H,MAAM,mBAAmB,GAAG,EAAE,CAAC;QAE/B,kBAAkB,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,EAAE;YAC5D,MAAM,EAAE,UAAU,EAAE,aAAa,KAAwB,OAAO,EAA7B,yEAA6B,CAAC;YACjE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,cAAc,CAAC;YACpD,IAAI,EAAE,GAAG,UAAU,IAAI,aAAa,CAAC;YACrC,EAAE,GAAG,UAAU,KAAK,SAAS,IAAI,aAAa,KAAK,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACtF,MAAM,aAAa,GAAG,sBAAsB,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,GAAG,QAAQ,CAAC;YAEtF,mBAAmB,CAAC,EAAE,CAAC,GAAG;gBACxB,IAAI;gBACJ,KAAK,EAAE,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa;aACvD,CAAC;YAEF,OAAO,aAAa,CAAC;QACvB,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;IAC1C,CAAC,EACD,CAAC,IAAI,CAAC,CACP,CAAC;IAEF,aAAa;IACb,OAAO,CACL,oBAAC,cAAc,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,eAAe,EAAE,QAAQ,EAAE,IAE1D,QAAQ,CACe,CAC3B,CAAC;AACJ,CAAC\"}","dts":{"name":"/Users/bill/git/react-simple-animate/animateGroup.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport { Sequences, AnimationProps, AnimateKeyframesProps } from './types';\r\ninterface Props {\r\n    play: boolean;\r\n    sequences: Sequences;\r\n    children: any;\r\n}\r\nexport declare const AnimateContext: React.Context<{\r\n    animationStates: {};\r\n    register: (data: AnimationProps | AnimateKeyframesProps) => void;\r\n}>;\r\nexport default function AnimateGroup(props: Props): JSX.Element;\r\nexport {};\r\n"}}
